<%- layout('layouts/patientBoilerplate') %>

    <div class="row" data-patient-id="<%= patient_id %>" id="patient" class="p-3">
        <div class="col-2">

        </div>
        <div class="col-6 white-background-color">
            <div id='calendar' class="p-1"></div>
        </div>
        <div class="col-3 d-flex flex-column ">
            <div class="card">
                <ul class="list-group list-group-flush">
                    <li class="list-group-item">Full Name: <%= doctor.person_name %>
                    </li>
                    <li class="list-group-item">Speciality: <%= doctor.doctor_speciality %>
                    </li>
                    <li class="list-group-item">Phone Number: <%= doctor.person_phone %>
                    </li>
                </ul>
            </div>
            <form id="form" class="text-center card p-1 m-auto w-100">
                <div class="mb-3 text-start">
                    <label for="diagnosisReason" class="form-label">Diagnosis Reason: </label>
                    <input type="text" class="form-control" id="diagnosisReason" name="appointment_reason">
                </div>
                <div class="mb-3">
                    <select class="form-select" name="appointment_type">
                        <option selected>Choose a type</option>
                        <option value="OFFLINE">Offline Appointment</option>
                        <option value="ONLINE">Online Appointment</option>
                    </select>
                </div>
                <div class="mb-3">
                    <input type="datetime-local" class="form-control" id="date_time">
                    <div id="invalid" class="d-none alert alert-warning"></div>
                    <div id="valid" class="d-none alert alert-info"></div>
                </div>
                <button type="submit" class="btn btn-primary" id="submitFormButton">Book an Appointment</button>
            </form>
        </div>
    </div>



    <script>
        const form = document.querySelector('#form');
        const dateTime = document.querySelector('#date_time');
        const patientIdHolder = document.querySelector('#patient');
        const invalid = document.querySelector('#invalid');
        const valid = document.querySelector('#valid');
        const submitFormButton = document.querySelector('#submitFormButton');

        const doctor_id = window.location.pathname.split('/')[4];
        const patient_id = patientIdHolder.getAttribute('data-patient-id');
        let submitFlag = false;

        dateTime.addEventListener('change', async () => {
            const tmp = dateTime.value;
            const tmp_date = new Date(tmp);
            const result = await fetch(`/appointment/checkDate/search?patient_id=${patient_id}&doctor_id=${doctor_id}&date=${tmp}`);
            const data = await result.json();
            // check if this date is Available for this doctor and this patient  with the ability to use wi-fi can be called smart. This is what now is referred to as internet of things (IoT)
            // result must be 0 ========> the doctos has 0 appointments so as the patient
            if (data.status === 'success') {
                submitFlag = true;
                valid.classList.add('d-block');
                valid.classList.remove('d-none');
                valid.innerText = data.message;
                setTimeout(() => {
                    valid.innerText = '';
                    valid.classList.remove('d-block');
                    valid.classList.add('d-none');
                }, 2000);
            } else {
                submitFlag = false;
                invalid.classList.add('d-block');
                invalid.classList.remove('d-none');
                invalid.innerText = data.message;
                setTimeout(() => {
                    invalid.innerText = '';
                    invalid.classList.remove('d-block');
                    invalid.classList.add('d-none');
                }, 2000);
            }
            submitFormButton.addEventListener('click', () => {
                if (submitFlag) {
                    const insertData = {
                        doctor_id: doctor_id,
                        patient_id: patient_id,
                        appointment_date: tmp,
                        appointment_type: form[1].value,
                        appointment_reason: form[0].value,
                    }
                    const url = `/appointment/createAppointment`;
                    fetch(url, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(insertData)
                    })
                }
            });
        });

    </script>


    <script>
        const searchResult = document.getElementById('search-result');
        const treatment_box = document.querySelector('#treatments-box');
        const treatment_type = document.querySelectorAll('.treatment-type');
        const treatments = document.querySelector('#treatments');
        let activeType = null;
        let activeEle = null;
        treatment_type.forEach(async (e) => {
            e.addEventListener('click', async () => {
                if (activeType) {
                    activeType.classList.remove('btn-primary')
                    activeType.classList.add('btn-light');
                }
                searchResult.innerHTML = '';
                activeType = e;
                activeType.classList.remove('btn-light')
                activeType.classList.add('btn-primary');
                treatment_box.classList.remove('d-none');
                const result = await fetch(`/treatment/${e.innerHTML}`);
                const response = await result.json();
                console.dir(response);
                treatments.innerHTML = '';
                for (const r of response) {
                    if (r.prescription_dosage) {
                        treatments.innerHTML += `<div class="btn btn-light pres">${r.medical_history_diagnosis}</div>`;
                    } else if (!r.image_type) {
                        treatments.innerHTML += `<div class="btn btn-light scanner">${r.medical_history_diagnosis}</div>`;
                    }
                    else if (r.image_type == 'radio') {
                        treatments.innerHTML += `<div class="btn btn-light radio">${r.medical_history_diagnosis}</div>`;
                    }
                    else if (r.image_type == 'analyse') {
                        treatments.innerHTML += `<div class="btn btn-light analyse">${r.medical_history_diagnosis}</div>`;
                    }
                }
                const pres = document.querySelectorAll('.pres');
                pres.forEach(element => {
                    element.addEventListener('click', () => {
                        if (activeEle) {
                            activeEle.classList.remove('btn-success');
                            activeEle.classList.add('btn-light');
                        }
                        activeEle = element;
                        searchResult.innerHTML = '';
                        activeEle.classList.remove('btn-light');
                        activeEle.classList.add('btn-success');
                        const obj = response.find(e => e.medical_history_diagnosis == activeEle.innerHTML)
                        searchResult.innerHTML += `
                           <div class="card-body rounded  border-2"> 
                               <p class="lead">${obj.medical_history_notes}</p>
                               <p class="lead">${obj.prescription_medicine} - ${obj.prescription_dosage}</p>
                               <button class="btn btn-primary dwnld">Download</button> 
                               <button class="btn btn-danger text-white cls">Close</button>
                           </div>`;
                        const cls = searchResult.childNodes[1].childNodes[7];
                        const dwnld = searchResult.childNodes[1].childNodes[5];
                        dwnld.addEventListener('click', () => {
                            const doc = new jsPDF();
                            doc.save();
                        })
                        cls.addEventListener('click', () => {
                            searchResult.innerHTML = '';
                            activeEle.classList.remove('btn-success');
                            activeEle.classList.add('btn-light');
                            activeEle = null;
                        })
                    })
                })
                const image = document.querySelectorAll('.scanner') || document.querySelectorAll('.radio') || document.querySelectorAll('.analyse');
                image.forEach(element => {
                    element.addEventListener('click', () => {
                        if (activeEle) {
                            activeEle.classList.remove('btn-success');
                            activeEle.classList.add('btn-light');
                        }
                        activeEle = element;
                        searchResult.innerHTML = '';
                        activeEle.classList.remove('btn-light');
                        activeEle.classList.add('btn-success');
                        const obj = response.find(e => e.medical_history_diagnosis == activeEle.innerHTML)
                        searchResult.innerHTML += `
                           <div class="card-body rounded border border-2"> 
                               <p class="lead">${obj.medical_history_notes}</p>
                               <a href="../../${obj.image_url}.png" target="_blank" class="btn btn-success">Open Image</a>
                               <a href="../../${obj.image_url}.png" download class="btn btn-primary">Download Image</a>
                               <button class="btn btn-danger text-white cls">Close</button>
                           </div>`;
                        const cls = searchResult.childNodes[1].childNodes[7];
                        cls.addEventListener('click', () => {
                            searchResult.innerHTML = '';
                            activeEle.classList.remove('btn-success');
                            activeEle.classList.add('btn-light');
                            activeEle = null;
                        })
                    })
                })
            })
        });

    </script>
    <script>
        console.log("Patient ID: " + patient_id);
        console.log("Doctor ID: " + doctor_id);

        const get_patinet_appointments = async () => {
            const result = await fetch(`/users/getAppointments/${patient_id}`);
            const data = await result.json();
            return data;
        }

        const get_doctor_appointments = async () => {
            const result = await fetch(`/users/getAppointments/${doctor_id}`);
            const data = await result.json();
            return data;
        }
        
        document.addEventListener('DOMContentLoaded', async function () {
            const patient_appointments = await get_patinet_appointments();
            const doctor_appointments = await get_doctor_appointments();

            const events = [];
            // for(const p of patient_appointments) {
            //     let obj = {};
            //     obj.title = p.appointment_reason;
            //     obj.start = p.appointment_date;
            //     obj.allDay = false;
            //     events.push(obj);
            // }
            for(const d of doctor_appointments) {
                let obj = {};
                obj.title = d.appointment_reason;
                obj.start = d.appointment_date;
                obj.allDay = false;
                events.push(obj);
            }
            
            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                events: events
            });
            calendar.render();
        });
    
    </script>