<% layout('layouts/boilerplate') %>

    <div class="row">
        <div class="col-md-6">
            <div class="card p-0">
                <h5 class="card-header sticky-top">My Medical History</h5>
                <div class="card-body">
                    <div class="row" id="medicalHistoryRow">
                        <div class="col-6">
                            <div class="vstack gap-3">
                                <div class="card">
                                    <div class="card-body medical-history-height">
                                        <% for(const m of medical_history){ %>
                                            <div class="p-2 d-flex">
                                                <div
                                                    class="hstack gap-3 d-flex align-items-end justify-content-between flex-grow-1">
                                                    <label class="form-label">
                                                        <%= m.medical_history_diagnosis %>
                                                    </label>
                                                    <a class="btn btn-secondary search-treatment"
                                                        href="/treatment/search/<%= m.treatment_id %>"
                                                        onclick="return false;">Open Treatment</a>
                                                </div>
                                            </div>
                                            <% } %>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-4" id="search-result"></div>
                    </div>
                    <div class="row">
                        <div class="col-6">
                            <form action="/medicalHistory/" method="post" class="d-none" id="medicalHistoryForm">
                                <div class="mb-3">
                                    <select class="form-select" name="treatment" id="treatmentType">
                                        <option selected disabled>Select Treatment</option>
                                        <option value="prescription">Prescription</option>
                                        <option value="scanner">Scanner</option>
                                    </select>
                                </div>
                                <button class="btn btn-success d-none" id="submitMedicalHistoryForm">Add</button>
                            </form>
                        </div>
                    </div>

                </div>
                <div class="card-footer">
                    <a href="#" class="btn btn-primary" id="addMedicalHistory">Add Medical History</a>
                </div>
            </div>
        </div>
        <div class="card col-md-3 p-0 sensor-appointment-height">
            <h5 class="card-header sticky-top">My Sensors</h5>
            <!-- give max height to sensor card -->
            <div class="card-body vstack gap-2 overflow-scroll overflow-x-hidden">
                <% for(const s of sensors){ %>
                    <div class="p-2 text-center">
                        <h4 class="fs-5 d-inline">
                            <%= s.sensor_name %>:
                        </h4>
                        <span class=" fs-5 text-info">
                            <%= s.recorded_data_value %>
                            <%= s.recorded_data_unit %>
                        </span>
                        <div class="d-flex justify-content-around">
                            <form action="/sensor/<%= s.sensor_id %>?_method=PUT" method="POST"
                                class="d-none" id="sensorUpdate">
                                <div class="mb-3">
                                    <input type="text" class="form-control" id="name" name="name"
                                    placeholder="Enter New Name">
                                    <button class="btn btn-info text-white">Update Name</button>
                                </div>
                            </form>
                            <a class="btn btn-md btn-info text-white" id="updateSensor">Update Name</a>
                            <form action="/sensor/<%= s.sensor_id %>?_method=DELETE" method="post"
                                id="sensorDelete">
                                <button class="btn btn-md btn-danger">Delete</button>
                            </form>
                        </div>
                    </div>
                <% } %>
            </div>
            <div class="card-footer text-center">
                    <a href="#" class="btn btn-md btn-primary" id="addSensor">Add Sensor</a>
                    <form action="/sensor/<%= sensors[0] ? sensors[0].patient_id : '' %>" method="post" id="sensorAdd"
                        class="d-none">
                        <input type="text" class="form-control" placeholder="Sensor Name" name="name">
                        <input type="text" class="form-control" placeholder="Sensor Model" name="model">
                        <button class="btn btn-success">Add Sensor</button>
                    </form>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card">
                <div class="card-header">Chat with: <%= receiver.person_name %>
                </div>
                <div class="card-body" id="chatDiv"></div>
                <div class="card-footer d-flex gap-1">
                    <input type="text" class="form-control" placeholder="Enter message" id="chatInput">
                    <button class="btn btn-primary" id="sendMessage">Send</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        const socket = new WebSocket('ws://localhost:9090/room');

        const chatInput = document.querySelector('#chatInput');
        const chatHeader = document.querySelector('#chatBoxHeader');
        const chatBody = document.querySelector('#chatBoxBody');
        const messageFactory = document.querySelector('#messageFactory');
        const startChatBtns = document.querySelectorAll('.startChat');
        const sendBTN = document.querySelector('.sendBTN');
        const profileCards = document.querySelectorAll('.profileCards');
        const chatBox = document.querySelector('#chatBox');
        const chatSend = document.querySelector('#sendMessage')
        const chatDiv = document.querySelector('#chatDiv');


        const sender_id = "<%= sender.person_id %>";
        const sender_name = "<%= sender.person_name%>";
        const receiver_id = "<%= receiver.person_id%>";

        let role = null;
        const test = "<%= sender %>";

        if ("<%= sender.doctor_speciality%>") {
            role = "doctor";
        } else {
            role = "patient";
        }

        // Establish a socket between all doctors of this patient
        socket.addEventListener('open', (event) => {
            console.log('WebSocket connection opened');
            const message = {
                type: "login",
                sender_id: sender_id,
                receiver_id: receiver_id,
                role: role
            }
            socket.send(JSON.stringify(message));

        });
        // Send a message to specific patient
        let activeTab1 = null;
        chatSend.addEventListener('click', () => {
            const content = chatInput.value;
            const message = {
                type: "message",
                sender_id: sender_id,
                sender_name: sender_name,
                receiver_id: receiver_id,
                role: role,
                content
            }
            if (chatInput.value !== '') {
                const html = `<p class="lead text-start">You: ${chatInput.value}</p>`;
                chatDiv.innerHTML += html;
                socket.send(JSON.stringify(message));
            }
            chatInput.value = '';
        })

        // Receives A message from Certain patient
        socket.addEventListener('message', async (event) => {

            const data = JSON.parse(event.data);
            console.log("HERE WITH DATA" + data.content);
            const html = `<p class="lead">${data.sender_name}: ${data.content}</p>`;
            chatDiv.innerHTML += html;
            // sendBTN.addEventListener('click', () => {
            //     const message = {
            //         type: "message",
            //         sender_id: doctor_id,
            //         sender_name: sender_name,
            //         receiver_id: receiver_id,
            //         role: role,
            //         content: chatInput.value
            //     }
            //     if (chatInput.value !== '') {
            //         const html = `<p class="lead">You: ${chatInput.value}</p>`;
            //         chatDiv.innerHTML += html;
            //         socket.send(JSON.stringify(message));
            //         chatInput.value = '';
            //     }
            // })

        }
        );


// End
// socket.addEventListener('close', (event) => {
//     console.log('WebSocket connection closed');
// });

    </script>

    <script>
        const searchTreatment = document.querySelectorAll('.search-treatment');
        const searchResult = document.getElementById('search-result');
        let activeTab = '';
        searchTreatment.forEach(e => {
            e.addEventListener('click', async (ele) => {
                if (!(activeTab === '')) {
                    activeTab.classList.remove('btn-success');
                }
                activeTab = ele.target;
                ele.target.classList.add('btn-success');
                const link = ele.target.getAttribute('href');
                const result = await fetch(link);
                const result1 = await result.text();
                searchResult.innerHTML = result1;
            })
        })

    </script>
    <script>
        const addMedicalHistoryButton = document.querySelector('#addMedicalHistory');
        const medicalHistoryForm = document.querySelector('#medicalHistoryForm');
        const medicalHistoryRow = document.querySelector('#medicalHistoryRow');

        addMedicalHistoryButton.addEventListener('click', () => {
            addMedicalHistoryButton.classList.add('d-none');
            medicalHistoryRow.classList.add('d-none');
            medicalHistoryForm.classList.remove('d-none');
        })
    </script>
    <script>
        function createPrescription() {
            const div = document.createElement('div');
            div.classList.add('d-flex', 'flex-column', 'gap-2');
            const diagnosisInput = document.createElement('input');
            diagnosisInput.classList.add('form-control');
            diagnosisInput.setAttribute('type', 'text');
            diagnosisInput.setAttribute('name', `diagnosis`);
            diagnosisInput.setAttribute('placeholder', 'Diagnosis');
            const notesInput = document.createElement('input');
            notesInput.classList.add('form-control');
            notesInput.setAttribute('type', 'text');
            notesInput.setAttribute('name', `notes`);
            notesInput.setAttribute('placeholder', 'notes');
            const dateInput = document.createElement('input');
            dateInput.classList.add('form-control');
            dateInput.setAttribute('type', 'datetime-local');
            dateInput.setAttribute('name', `date`);
            const medicationInput = document.createElement('input');
            medicationInput.classList.add('form-control');
            medicationInput.setAttribute('type', 'text');
            medicationInput.setAttribute('name', `medicine`);
            medicationInput.setAttribute('placeholder', 'Medication name');
            const dosageInput = document.createElement('input');
            dosageInput.classList.add('form-control');
            dosageInput.setAttribute('type', 'text');
            dosageInput.setAttribute('name', `dosage`);
            dosageInput.setAttribute('placeholder', 'Medication dosage');
            div.appendChild(diagnosisInput);
            div.appendChild(notesInput);
            div.appendChild(dateInput);
            div.appendChild(medicationInput);
            div.appendChild(dosageInput);
            return div;
        }
        function createScanner() {
            const div = document.createElement('div');
            div.classList.add('d-flex', 'flex-column', 'gap-2');
            const diagnosisInput = document.createElement('input');
            diagnosisInput.classList.add('form-control');
            diagnosisInput.setAttribute('type', 'text');
            diagnosisInput.setAttribute('name', `diagnosis`);
            diagnosisInput.setAttribute('placeholder', 'Diagnosis');
            const notesInput = document.createElement('input');
            notesInput.classList.add('form-control');
            notesInput.setAttribute('type', 'text');
            notesInput.setAttribute('name', `notes`);
            notesInput.setAttribute('placeholder', 'notes');
            const dateInput = document.createElement('input');
            dateInput.classList.add('form-control');
            dateInput.setAttribute('type', 'date');
            dateInput.setAttribute('name', `date`);
            const scannerInput = document.createElement('input');
            scannerInput.classList.add('form-control');
            scannerInput.setAttribute('type', 'file');
            scannerInput.setAttribute('name', `photos`);
            div.appendChild(diagnosisInput);
            div.appendChild(notesInput);
            div.appendChild(dateInput);
            div.appendChild(scannerInput);
            return div;
        }

    </script>

    <script>
        const treatmentType = document.querySelector('#treatmentType');
        const submitMedicalHistoryForm = document.querySelector('#submitMedicalHistoryForm');

        treatmentType.addEventListener('change', () => {
            treatmentType.classList.add('d-none');
            submitMedicalHistoryForm.classList.remove('d-none');
            let element = null;
            if (treatmentType.value == 'prescription') {
                element = createPrescription();
            } else if (treatmentType.value == 'scanner') {
                element = createScanner();
                medicalHistoryForm.setAttribute('enctype', 'multipart/form-data');
            }
            medicalHistoryForm.insertBefore(element, submitMedicalHistoryForm);
        })
    </script>